#!/usr/bin/env ruby
# frozen_string_literal: true

require "bundler/setup"
require "sinatra"
require "sinatra/json"
require "sinatra/namespace"
require "kramdown"
require 'mime/types'
require "logger"

require_relative "../lib/faun"

module FaunWeb
  class App < Sinatra::Base
    register Sinatra::Namespace

    def initialize
      super
      @forum = Faun::Forum.new("/var/lib/faun/the13")
    end

    configure do
      enable :static
      set :views, File.expand_path("../views", __dir__)
      set :public_folder, File.expand_path("../public", __dir__)
    end

    configure :development do
      enable :logging, :dump_errors, :raise_errors
      set :logging, Logger::DEBUG
    end

    before :development do
      cache_control :no_store, :no_cache, :must_revalidate
    end

    get "/" do
      redirect 'index.html'
    end

    get "/topics/" do
      slim :sidebar
    end

    get "/posts/" do
      slim :details, :locals => { :posts => @forum.posts }
    end

    get "/topics/:id/" do |id|
      topic = @forum.topic(id.to_i)
      slim :details, :locals => { :posts => topic.posts }
    end

    get "/topics/:id/:subid/" do |id, subid|
      sub = @forum.subtopic(id.to_i, subid.to_i)
      slim :details, :locals => { :posts => sub.posts }
    end

    get "/posts/:id/" do |id|
      post = @forum.post(id.to_i)
      content = Kramdown::Document.new(post.content).to_html
      slim :content, :locals => { :post => post, :content => content }
    end

    get "/posts/:id/assets/:name" do |id, name|
      post = @forum.post(id.to_i)
      asset_path = post.asset_path(name)
      content_type MIME::Types.type_for(asset_path).first.content_type
      send_file asset_path
    end

    get "/posts/:id/threads/" do |id|
      post = @forum.post(id.to_i)
      thread = post.threads.values.first
      slim :thread, :locals => { :thread => thread }
    end

    get "/posts/:id/threads/:tid/" do |id, tid|
      post = @forum.post(id.to_i)
      thread = post.threads[tid.to_i]
      slim :thread, :locals => { :thread => thread }
    end

    namespace '/api/v1' do
      before do
        content_type :json
      end

      get '/topics' do
        json @forum
      end

      get '/topics/:id' do |id|
        topic = @forum.topic(id.to_i)
        topic.posts.to_json
      end

      get '/topics/:id/:subid' do |id, subid|
        sub = @forum.subtopic(id.to_i, subid.to_i)
        sub.posts.to_json
      end

      get '/posts' do
        @forum.posts.to_json
      end

      get '/posts/:id' do |id|
        post = @forum.post(id.to_i)
        post.to_json
      end
    end
  end
end

FaunWeb::App.run!
